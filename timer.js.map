{"version":3,"file":"timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import '../css/style.css';\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('#start-btn');\nconst refs = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]')\n};\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const picked = selectedDates[0];\n    if (picked <= Date.now()) {\n      startBtn.disabled = true;\n      iziToast.error({ title: 'Помилка', message: 'Please choose a date in the future' });\n    } else {\n      userSelectedDate = picked;\n      startBtn.disabled = false;\n    }\n  }\n});\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  input.disabled = true;\n  updateTimer();\n  timerInterval = setInterval(updateTimer, 1000);\n});\n\nfunction updateTimer() {\n  const delta = userSelectedDate - Date.now();\n  if (delta <= 0) {\n    clearInterval(timerInterval);\n    renderTime({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    input.disabled = false;\n    return;\n  }\n  renderTime(convertMs(delta));\n}\n\nfunction convertMs(ms) {\n  const second = 1000,\n        minute = second * 60,\n        hour   = minute * 60,\n        day    = hour * 24;\n\n  const days    = Math.floor(ms / day),\n        hours   = Math.floor((ms % day) / hour),\n        minutes = Math.floor(((ms % day) % hour) / minute),\n        seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction renderTime({ days, hours, minutes, seconds }) {\n  refs.days.textContent    = addLeadingZero(days);\n  refs.hours.textContent   = addLeadingZero(hours);\n  refs.minutes.textContent = addLeadingZero(minutes);\n  refs.seconds.textContent = addLeadingZero(seconds);\n}"],"names":["input","startBtn","refs","userSelectedDate","timerInterval","flatpickr","selectedDates","picked","iziToast","updateTimer","delta","renderTime","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"0FAMA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAO,CACX,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAmB,KACnBC,EAAgB,KAEpBC,EAAUL,EAAO,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQM,EAAe,CACrB,MAAMC,EAASD,EAAc,CAAC,EAC1BC,GAAU,KAAK,OACjBN,EAAS,SAAW,GACpBO,EAAS,MAAM,CAAE,MAAO,UAAW,QAAS,qCAAsC,IAElFL,EAAmBI,EACnBN,EAAS,SAAW,GAExB,CACF,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAM,SAAW,GACjBS,EAAW,EACXL,EAAgB,YAAYK,EAAa,GAAI,CAC/C,CAAC,EAED,SAASA,GAAc,CACrB,MAAMC,EAAQP,EAAmB,KAAK,IAAG,EACzC,GAAIO,GAAS,EAAG,CACd,cAAcN,CAAa,EAC3BO,EAAW,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,EAAG,EACxDX,EAAM,SAAW,GACjB,MACF,CACAW,EAAWC,EAAUF,CAAK,CAAC,CAC7B,CAEA,SAASE,EAAUC,EAAI,CAMrB,MAAMC,EAAU,KAAK,MAAMD,EAAK,KAAG,EAC7BE,EAAU,KAAK,MAAOF,EAAK,MAAO,IAAI,EACtCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASR,EAAW,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACrDf,EAAK,KAAK,YAAiBgB,EAAeJ,CAAI,EAC9CZ,EAAK,MAAM,YAAgBgB,EAAeH,CAAK,EAC/Cb,EAAK,QAAQ,YAAcgB,EAAeF,CAAO,EACjDd,EAAK,QAAQ,YAAcgB,EAAeD,CAAO,CACnD"}